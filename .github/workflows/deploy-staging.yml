name: Deploy to Staging

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    # Do not deploy in the main repository, only in user projects
    if: github.repository_owner != 'fastapi'
    runs-on:
      - self-hosted
      - staging
    environment: staging
    env:
      ENVIRONMENT: staging
      DOMAIN: ${{ secrets.DOMAIN_STAGING }}
      FRONTEND_HOST: ${{ secrets.FRONTEND_HOST }}
      BACKEND_CORS_ORIGINS: ${{ secrets.BACKEND_CORS_ORIGINS }}
      STACK_NAME: ${{ secrets.STACK_NAME_STAGING }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FIRST_SUPERUSER: ${{ secrets.FIRST_SUPERUSER }}
      FIRST_SUPERUSER_PASSWORD: ${{ secrets.FIRST_SUPERUSER_PASSWORD }}
      SMTP_HOST: ${{ secrets.SMTP_HOST }}
      SMTP_USER: ${{ secrets.SMTP_USER }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      EMAILS_FROM_EMAIL: ${{ secrets.EMAILS_FROM_EMAIL }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - name: Check Environment Variables
        run: |
          echo "Checking environment variables (showing only lengths and patterns):"
          echo "DOMAIN length: ${#DOMAIN}"
          echo "BACKEND_CORS_ORIGINS length: ${#BACKEND_CORS_ORIGINS}"
          echo "DOMAIN pattern: $(echo $DOMAIN | sed 's/[^.]//g')"
          echo "STACK_NAME length: ${#STACK_NAME}"
          echo "SECRET_KEY length: ${#SECRET_KEY}"
          echo "FIRST_SUPERUSER pattern: $(echo $FIRST_SUPERUSER | grep -o '@' | wc -l) @ symbols"
          echo "FIRST_SUPERUSER_PASSWORD length: ${#FIRST_SUPERUSER_PASSWORD}"
          echo "SMTP_HOST length: ${#SMTP_HOST}"
          echo "SMTP_USER length: ${#SMTP_USER}"
          echo "SMTP_PASSWORD length: ${#SMTP_PASSWORD}"
          echo "EMAILS_FROM_EMAIL pattern: $(echo $EMAILS_FROM_EMAIL | grep -o '@' | wc -l) @ symbols"
          echo "POSTGRES_PASSWORD length: ${#POSTGRES_PASSWORD}"
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build and Deploy
        run: |
          echo "Domain pattern check: $(echo $DOMAIN | grep -E '^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$' && echo 'valid' || echo 'invalid')"
          echo "Email pattern check: $(echo $FIRST_SUPERUSER | grep -E '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$' && echo 'valid' || echo 'invalid')"
          docker compose -f docker-compose.yml --project-name "$STACK_NAME" build
          docker compose -f docker-compose.yml --project-name "$STACK_NAME" up -d
